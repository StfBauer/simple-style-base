{"version":3,"sources":["ssg.ui.js"],"names":["ssg","ssg_1","UI","win","window","doc","document","ssgCoreTemplates","ssgCore","templates","ssgTemplates","patternConfig","currentSingleItems","currentSingleCount","viewports","State","coreUiElement","active","hidden","show","STATE_KEY","XTRAS","FILTERS","_currentUIState","defState","filter","xtras","screen","availWidth","_updateState","state","curState","checkSumXtras","checkSumFilter","checkSumScreen","i","length","indexOf","parseInt","toString","exception","console","log","_validateState","localStorage","setItem","JSON","stringify","sessionState","getItem","parse","current","update","Utils","requestData","method","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","this","status","response","statusText","onerror","send","changeItemToSinglePage","nodes","nodeCount","curNode","classList","contains","remove","add","hideSingleItemSlider","hide","singleItemSelector","querySelector","undefined","Filter","sliderSelection","allElements","querySelectorAll","firstItemFound","curElement","dataset","curSingleItem","title","getAttribute","file","category","push","EnableSingleSlider","elements","filterValue","newState","initDisco","disco","setInterval","discoButton","viewPortInner","viewPortWidth","curViewPort","Math","floor","random","value","style","width","clearInterval","Events","changeFilter","event","preventDefault","allButtons","curButton","target","tocButton","changeView","changeViewPort","vpButton","vpActiveButton","vpData","vpTarget","widthInput","innerWidth","viewPortResizer","KeyboardEvent","keyCode","innerPattern","newWidth","showSource","stopImmediatePropagation","newXtras","e","codeBlocks","showAnnotation","showToc","currentButton","containerToc","filterToc","currentToc","filterFolder","filterCat","parentNode","attributes","getNamedItem","btnShowToC","filterSelector","split","filterButtons","curFilterButton","curFilterStyle","curDataSet","tocElement","curItem","searchToc","searchBox","getElementById","searchValue","resetResult","j","searchResult","registerEvents","curElements","eventType","handler","addEventListener","Render","container","allContent","parser","DOMParser","patterns","curPattern","curPatternTitle","filename","curTemplate","baseFilter","filepath","sample","ssgData","content","patternItem","parseFromString","body","innerHTML","allContentDOM","allTempLates","allPages","allOrganism","insertAdjacentHTML","Prism","highlightAll","object","folder","ssgToc","baseElement","name","folderpath","patternTitle","currentSection","tocItems","k","RenderToc","ApplyUIState","buttons","query","invQuery","substr","notSelItems","selItems","cat","curFilter","allAMItems","slice","call","allOPTItems","allItems","concat","applyFilter","viewPortQuery","viewPortActiveButton","viewPortButton","widthSelector","contentWidth","applyScreenWidth","notes","notesButton","applyExtras","slideItems","setCurrentItem","index","currentTitle","textContent","curPatternElement","slidePatterns","stopPropagation","slider","newButton","cloneNode","replaceChild","findIndex","x","substring","ShowSliderCtrl","singleSliderControl","InitEvents","viewButtons","viewPortButtons","showCode","showAnnot","allTocItems","Init","all","then","result","error","PostRender","forEach","element","catch"],"mappings":"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","sourcesContent":["/// <reference path=\"../../typings/index.d.ts\" />\n;\nvar ssg;\n(function (ssg_1) {\n    var UI;\n    (function (UI) {\n        var win = window, doc = document, ssgCoreTemplates = ssgCore.templates, ssgTemplates = ssg.templates, patternConfig = null, currentSingleItems = [], currentSingleCount = 0, currentUIState = ssg.UI.State;\n        var viewports = [\n            320,\n            768,\n            1024,\n            3500\n        ];\n        var coreUiElement = {\n            filterButton: '.ssg-core-filter .ssg-button',\n            viewButton: '.ssg-core-view .ssg-button',\n            viewPortButton: '.ssg-core-viewport .ssg-button',\n            viewPortTarget: '.ssg-patterns-inner',\n            viewPortWidth: '#ssg-in-width',\n            viewToc: '.ssg-toc',\n            viewTocInner: '.ssg-toc-inner',\n            // Buttons\n            discoButton: '.ssg-button[data-viewport=\\'disco\\']',\n            btnShowCode: '.ssg-button[data-action=\\'ssg-code\\']',\n            btnShowAnnotion: '.ssg-button[data-action=\\'ssg-annot\\']',\n            btnShowToC: '.ssg-button[data-action=\\'ssg-toc\\']',\n            tocItem: '.ssg-toc-item',\n            tocSearchBox: '.ssg-toc-searchbox',\n            tocSearchValue: 'toc-searchbox',\n            patternItem: 'div[class^=ssg-item]',\n            singleItemNavTitle: '#ssg-item-nav-label',\n            singleItemNav: 'ssg-core-nav',\n            singleNavLeft: 'ssg-left',\n            singleNavRight: 'ssg-right',\n            // States\n            state: {\n                active: 'active',\n                hidden: 'hidden',\n                show: 'show'\n            }\n        };\n        UI.State = (function () {\n            var STATE_KEY = \"ssg.UI.State\", XTRAS = ['isolate', 'code', 'annotation'], FILTERS = ['atoms', 'molecules', 'organism', 'templates', 'pages', 'single'], SCREEN = ['s', 'm', 'l', 'uwd', 'full', 'disco'];\n            var _currentUIState = null;\n            // default UI State;\n            var defState = {\n                \"filter\": \"atoms\",\n                \"xtras\": ['annotation'],\n                \"screen\": window.screen.availWidth\n            };\n            // Validate current state entry\n            var _validateState = function (state) {\n                // checking if all states are valid\n                var checkSumXtras = 0, checkSumFilter = 0, checkSumScreen = 0;\n                // Check current xtra selection\n                for (var i = state.xtras.length - 1; i > 0; i--) {\n                    var curState = state.xtras[i];\n                    if (XTRAS.indexOf(curState) === -1) {\n                        checkSumXtras += 1;\n                    }\n                }\n                // Check current filter\n                if (FILTERS.indexOf(state.filter) === -1) {\n                    checkSumFilter += 1;\n                }\n                // check current screen\n                try {\n                    parseInt(state.screen.toString());\n                }\n                catch (exception) {\n                    console.log(\"ERROR:\" + exception);\n                    checkSumScreen += 1;\n                }\n                if (checkSumFilter + checkSumXtras + checkSumScreen === 0) {\n                    return true;\n                }\n                return false;\n            };\n            var _updateState = function (state) {\n                var curState = state;\n                if (_validateState(state)) {\n                    localStorage.setItem(STATE_KEY, JSON.stringify(curState));\n                }\n                else {\n                    throw \"There are some errors with the state\";\n                }\n            };\n            (function () {\n                var sessionState = localStorage.getItem(STATE_KEY);\n                // If session already exists\n                if (sessionState) {\n                    _currentUIState = JSON.parse(sessionState);\n                }\n                else {\n                    localStorage.setItem(STATE_KEY, JSON.stringify(defState));\n                    _currentUIState = defState;\n                }\n            })();\n            return {\n                current: function () {\n                    return _currentUIState;\n                },\n                update: function (state) {\n                    _updateState(state);\n                }\n            };\n        })();\n        var Utils;\n        (function (Utils) {\n            Utils.requestData = function (method, url) {\n                return new Promise(function (resolve, reject) {\n                    var xhr;\n                    var loaded = function () {\n                        if (this.status >= 200 && this.status < 300) {\n                            resolve(xhr.response);\n                        }\n                        else {\n                            reject({\n                                status: this.status,\n                                statusText: xhr.statusText\n                            });\n                        }\n                    };\n                    var onError = function () {\n                        reject({\n                            status: this.status,\n                            statusText: xhr.statusText\n                        });\n                    };\n                    xhr = new XMLHttpRequest();\n                    xhr.open(method, url);\n                    xhr.onload = loaded;\n                    xhr.onerror = onError;\n                    xhr.send();\n                });\n            };\n            Utils.changeItemToSinglePage = function (nodes) {\n                var nodeCount = nodes.length;\n                while (nodeCount !== 0) {\n                    nodeCount -= 1;\n                    var curNode = nodes[nodeCount];\n                    if (curNode.classList.contains('ssg-item')) {\n                        curNode.classList.remove('ssg-item');\n                        curNode.classList.add('ssg-item-single');\n                    }\n                }\n            };\n            Utils.hideSingleItemSlider = function (hide) {\n                var singleItemSelector = doc.querySelector(\".\" + coreUiElement.singleItemNav);\n                if (singleItemSelector !== undefined && singleItemSelector !== null) {\n                    if (hide === true) {\n                        singleItemSelector.classList.add(coreUiElement.state.hidden);\n                    }\n                    else {\n                        singleItemSelector.classList.remove(coreUiElement.state.hidden);\n                    }\n                }\n            };\n        })(Utils = UI.Utils || (UI.Utils = {}));\n        ;\n        UI.Filter = {\n            sliderSelection: function (filter) {\n                var allElements = doc.querySelectorAll('div[data-cat]'), firstItemFound = false;\n                // reset currentSingleItem\n                currentSingleItems = [];\n                for (var i = 0; i < allElements.length; i++) {\n                    var curElement = allElements[i];\n                    if (curElement.dataset['cat'] === filter) {\n                        var curSingleItem = {\n                            title: curElement.getAttribute('title'),\n                            file: curElement.dataset['file'],\n                            category: filter\n                        };\n                        currentSingleItems.push(curSingleItem);\n                        if (firstItemFound === false) {\n                            currentSingleCount = 0;\n                            firstItemFound = true;\n                            if (curElement.classList.contains('hide')) {\n                                curElement.classList.remove('hide');\n                            }\n                        }\n                        else {\n                            curElement.classList.add('hide');\n                        }\n                    }\n                    else {\n                        curElement.classList.add('hide');\n                    }\n                }\n                ssg.UI.EnableSingleSlider(currentSingleItems);\n                if (currentSingleItems.length > 1) {\n                    ssg.UI.Utils.hideSingleItemSlider(false);\n                }\n                else {\n                    ssg.UI.Utils.hideSingleItemSlider(true);\n                }\n            },\n            elements: function (filterValue) {\n                switch (filterValue) {\n                    case \"atoms\":\n                    case \"molecules\":\n                        var newState = ssg.UI.State.current();\n                        newState.filter = filterValue;\n                        ssg.UI.State.update(newState);\n                        var allElements = doc.querySelectorAll('div[data-cat]');\n                        for (var i = allElements.length - 1; i >= 0; i--) {\n                            var curElement = allElements[i];\n                            if (curElement.dataset['cat'] === filterValue) {\n                                curElement.classList.remove('hide');\n                            }\n                            else {\n                                curElement.classList.add('hide');\n                            }\n                        }\n                        ssg.UI.Utils.hideSingleItemSlider(true);\n                        break;\n                    case \"organism\":\n                        ssg.UI.Filter.sliderSelection(filterValue);\n                        break;\n                    case \"templates\":\n                        ssg.UI.Filter.sliderSelection(filterValue);\n                        break;\n                    case \"pages\":\n                        ssg.UI.Filter.sliderSelection(filterValue);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        };\n        UI.initDisco = function () {\n            var disco = setInterval(function () {\n                var discoButton = document.querySelector(coreUiElement.discoButton + \".\" + coreUiElement.state.active), viewPortInner = doc.querySelector(coreUiElement.viewPortTarget), viewPortWidth = doc.querySelector(coreUiElement.viewPortWidth);\n                if (discoButton !== null) {\n                    var curViewPort = Math.floor(Math.random() * (viewports.length - 0)) + 0;\n                    viewPortWidth.value = viewPortInner.style.width = viewports[curViewPort].toString();\n                }\n                else {\n                    clearInterval(disco);\n                }\n            }, 1000);\n        };\n        UI.Events = {\n            // change all filter\n            changeFilter: function (event) {\n                // prevent all default\n                event.preventDefault();\n                var allButtons = doc.querySelectorAll(coreUiElement.filterButton);\n                for (var i = allButtons.length - 1; i >= 0; i--) {\n                    if (allButtons[i].classList.contains(coreUiElement.state.active)) {\n                        allButtons[i].classList.remove(coreUiElement.state.active);\n                    }\n                }\n                var curButton = event.target, filter = curButton.dataset['filter'];\n                curButton.classList.add(coreUiElement.state.active);\n                UI.Filter.elements(filter);\n                // Check if toc button is active otherwise remove state.\n                var tocButton = doc.querySelectorAll(coreUiElement.btnShowToC);\n                // if toc button was found\n                if (tocButton.length !== 0) {\n                    // remove active state in case toc was selected\n                    if (tocButton[0].classList.contains(coreUiElement.state.active)) {\n                        tocButton[0].classList.remove('active');\n                    }\n                }\n                ;\n                var curState = ssg.UI.State.current();\n                curState.filter = filter;\n                ssg.UI.State.update(curState);\n                return false;\n            },\n            // change view - Add isolated, code, Annotation\n            changeView: function (event) {\n                // prevent all default\n                event.preventDefault();\n                var curButton = event.target, filter = curButton.dataset['filter'];\n                curButton.classList.contains(coreUiElement.state.active) ?\n                    curButton.classList.remove(coreUiElement.state.active) : curButton.classList.add(coreUiElement.state.active);\n            },\n            // adjust view port to differnet width\n            changeViewPort: function (event) {\n                event.preventDefault();\n                var vpButton = event.target, vpActiveButton = doc.querySelector(coreUiElement.viewPortButton + '.' + coreUiElement.state.active), vpData = vpButton.dataset['viewport'], vpTarget = doc.querySelector(coreUiElement.viewPortTarget), widthInput = doc.querySelector(coreUiElement.viewPortWidth);\n                // Updating State\n                var newState = ssg.UI.State.current();\n                newState.screen = vpData;\n                ssg.UI.State.update(newState);\n                // remove current active button\n                if (vpActiveButton !== null) {\n                    vpActiveButton.classList.remove(coreUiElement.state.active);\n                }\n                if (vpActiveButton === vpButton) {\n                    vpButton.classList.remove(coreUiElement.state.active);\n                    vpData = 'full';\n                }\n                else {\n                    vpButton.classList.add(coreUiElement.state.active);\n                }\n                // recheck Active Buttons\n                vpActiveButton = doc.querySelector(coreUiElement.viewPortButton + '.' + coreUiElement.state.active);\n                if (vpActiveButton === null) {\n                    vpActiveButton = doc.querySelector('.ssg-button[data-viewport=\\'full\\']');\n                    vpActiveButton.classList.add(coreUiElement.state.active);\n                }\n                // action what to do\n                if (typeof vpTarget !== undefined) {\n                    switch (vpData) {\n                        case 'full':\n                            vpData = vpTarget.style.width = win.innerWidth.toString();\n                            break;\n                        case 'disco':\n                            ssg.UI.initDisco();\n                            break;\n                        default:\n                            vpTarget.style.width = vpData;\n                            break;\n                    }\n                }\n                if (vpData !== 'disco') {\n                    // Update width indicator\n                    vpTarget = doc.querySelector(coreUiElement.viewPortTarget);\n                    widthInput.value = vpData;\n                }\n            },\n            // Resize View Port through manual update of width\n            viewPortResizer: function (event) {\n                if (event instanceof KeyboardEvent) {\n                    var kbEvent = event;\n                    if (kbEvent.keyCode == 13) {\n                        var innerPattern = doc.querySelector(coreUiElement.viewPortTarget), newWidth = doc.querySelector(coreUiElement.viewPortWidth);\n                        innerPattern.style.width = newWidth.value;\n                    }\n                }\n                else {\n                    var innerPattern = doc.querySelector(coreUiElement.viewPortTarget), newWidth = doc.querySelector(coreUiElement.viewPortWidth);\n                    innerPattern.style.width = newWidth.value;\n                }\n            },\n            // Show and hides source code\n            showSource: function (event) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                // Updating State\n                var newState = ssg.UI.State.current();\n                // check if code is already included in UI Extras\n                if (newState.xtras.indexOf('code') === -1) {\n                    newState.xtras.push('code');\n                }\n                else {\n                    var newXtras = newState.xtras.filter(function (e) { return e !== 'code'; });\n                    newState.xtras = newXtras;\n                }\n                ssg.UI.State.update(newState);\n                if (event.target.classList.contains(coreUiElement.state.active)) {\n                    // sho source code by adding class\n                    var codeBlocks = doc.querySelectorAll('.ssg-item-code');\n                    for (var i = codeBlocks.length - 1; i >= 0; i--) {\n                        codeBlocks[i].classList.add(coreUiElement.state.show);\n                    }\n                }\n                else {\n                    // hide source code by removing the class\n                    var codeBlocks = doc.querySelectorAll('.ssg-item-code');\n                    for (var i = codeBlocks.length - 1; i >= 0; i--) {\n                        codeBlocks[i].classList.remove(coreUiElement.state.show);\n                    }\n                }\n            },\n            // show and hides annotations\n            showAnnotation: function (event) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                // Updating State\n                var newState = ssg.UI.State.current();\n                // check if code is already included in UI Extras\n                if (newState.xtras.indexOf('annotation') === -1) {\n                    newState.xtras.push('annotation');\n                }\n                else {\n                    var newXtras = newState.xtras.filter(function (e) { return e !== 'annotation'; });\n                    newState.xtras = newXtras;\n                }\n                ssg.UI.State.update(newState);\n                if (event.target.classList.contains(coreUiElement.state.active)) {\n                    // show annotation by adding class\n                    var codeBlocks = doc.querySelectorAll('.ssg-item-description');\n                    for (var i = codeBlocks.length - 1; i >= 0; i--) {\n                        codeBlocks[i].classList.add(coreUiElement.state.show);\n                    }\n                }\n                else {\n                    // hide annotation code by removing the class\n                    var codeBlocks = doc.querySelectorAll('.ssg-item-description');\n                    for (var i = codeBlocks.length - 1; i >= 0; i--) {\n                        codeBlocks[i].classList.remove(coreUiElement.state.show);\n                    }\n                }\n            },\n            // show and collapse table of contents\n            showToc: function (event) {\n                event.preventDefault();\n                var currentButton = event.target, containerToc = doc.querySelector(coreUiElement.viewToc);\n                currentButton !== null && currentButton.classList.contains(coreUiElement.state.active) ?\n                    currentButton.classList.remove(coreUiElement.state.active) : currentButton.classList.add(coreUiElement.state.active);\n                if (containerToc !== null) {\n                    if (containerToc.classList.contains(coreUiElement.state.show)) {\n                        containerToc.classList.add(coreUiElement.state.hidden);\n                        containerToc.classList.remove(coreUiElement.state.show);\n                    }\n                    else {\n                        containerToc.classList.remove(coreUiElement.state.hidden);\n                        containerToc.classList.add(coreUiElement.state.show);\n                    }\n                }\n            },\n            // filter single toc element\n            filterToc: function (event) {\n                event.preventDefault();\n                var currentToc = event.target, filter = currentToc.dataset['filter'], filterFolder = currentToc.dataset['folder'], filterCat = (currentToc.parentNode.attributes.getNamedItem('id').value), tocButton = doc.querySelector(ssg.UI.btnShowToC);\n                if (tocButton) {\n                    tocButton[0].classList.add('active');\n                }\n                if (filterCat) {\n                    if (filterFolder === 'templates' ||\n                        filterFolder === 'organism' ||\n                        filterFolder === 'page') {\n                        var selectedItems = doc.querySelectorAll('div[data-cat=' + filterFolder + ']');\n                        // Updating current state\n                        var curState = ssg.UI.State.current();\n                        curState.filterSelector = '.' + filter;\n                        ssg.UI.State.update(curState);\n                        ssg.UI.Filter.sliderSelection(filterFolder);\n                    }\n                    else {\n                        ssg.UI.Utils.hideSingleItemSlider(true);\n                    }\n                    var category = filterCat.split('-')[1];\n                    var filterButtons = document.querySelectorAll('.ssg-core-filter .ssg-button');\n                    for (var i = filterButtons.length - 1; i >= 0; i--) {\n                        var curFilterButton = filterButtons[i], curFilterStyle = curFilterButton.classList, curDataSet = curFilterButton.dataset['filter'];\n                        if (curFilterStyle.contains('active')) {\n                            curFilterStyle.remove('active');\n                        }\n                        if (curDataSet === category) {\n                            curFilterStyle.add('active');\n                        }\n                    }\n                }\n                // Updating State\n                var newState = ssg.UI.State.current();\n                newState.filter = 'single';\n                newState.filterSelector = '.' + filter;\n                ssg.UI.State.update(newState);\n                if (filter !== null) {\n                    var allElements = doc.querySelectorAll(coreUiElement.patternItem), tocElement = doc.querySelector(coreUiElement.viewToc);\n                    for (var i = allElements.length - 1; i >= 0; i--) {\n                        var curItem = allElements[i];\n                        if (curItem.dataset['file'] === filter) {\n                            curItem.classList.remove('hide');\n                        }\n                        else {\n                            curItem.classList.add('hide');\n                        }\n                    }\n                    tocElement.classList.remove('show');\n                    tocElement.classList.add('hidden');\n                }\n            },\n            // search for item in toc\n            searchToc: function (event) {\n                event.preventDefault();\n                var searchBox = doc.getElementById(coreUiElement.tocSearchValue);\n                if (searchBox !== null) {\n                    var searchValue = searchBox.value;\n                    var resetResult = doc.querySelectorAll('.ssg-toc-item');\n                    for (var j = resetResult.length - 1; j >= 0; j--) {\n                        if (resetResult[j].classList.contains('hide')) {\n                            resetResult[j].classList.remove('hide');\n                        }\n                    }\n                    if (searchValue !== '') {\n                        var searchResult = doc.querySelectorAll(\".ssg-toc-item:not([data-filter*='\" + searchValue + \"'])\");\n                        if (searchResult !== null) {\n                            for (var i = searchResult.length - 1; i >= 0; i--) {\n                                searchResult[i].classList.add('hide');\n                            }\n                        }\n                    }\n                }\n            },\n            // register specific event on all notes\n            registerEvents: function (curElements, eventType, handler) {\n                for (var i = curElements.length - 1; i >= 0; i--) {\n                    curElements[i].addEventListener(eventType, handler);\n                }\n            }\n        };\n        UI.Render = function () {\n            var RenderToc = function (patternConfig) {\n                var patterns = patternConfig.patterns.filter(function (object) {\n                    return object[\"deleted\"] === undefined;\n                }), folder = patternConfig.folder, ssgToc = doc.querySelector(coreUiElement.viewTocInner);\n                for (var i = 0; i < folder.length; i++) {\n                    var baseElement = '<ul><li id=ssg-' + folder[i].name + ' class=ssg-toc-header>' +\n                        folder[i].name +\n                        '</li><ul id=ssg-' + folder[i].name + '-items class=ssg-toc-items></ul></ul>';\n                    ssgToc.insertAdjacentHTML('beforeend', baseElement);\n                }\n                for (var j = 0; j < patterns.length; j++) {\n                    var folderpath = patterns[j].filepath.split('/')[0];\n                    var patternTitle = '<li class=ssg-toc-item data-filter=\\\"' +\n                        patterns[j].filename + '\\\" ' +\n                        ' data-folder=\\\"' + folderpath + '\\\" ' +\n                        '>' +\n                        patterns[j].title + '</li>';\n                    var currentSection = doc.getElementById('ssg-' + folderpath + '-items');\n                    if (currentSection !== null) {\n                        currentSection.insertAdjacentHTML('beforeend', patternTitle);\n                    }\n                }\n                var tocItems = doc.querySelectorAll(coreUiElement.tocItem);\n                for (var k = 0; k < tocItems.length; k++) {\n                    tocItems[k].addEventListener('click', UI.Events.filterToc);\n                }\n            };\n            var container = doc.querySelector(coreUiElement.viewPortTarget), tocContainer = doc.querySelector(coreUiElement.viewTocInner);\n            var allContent = '', allToc = '', parser = new DOMParser();\n            for (var i = patternConfig.patterns.length - 1; i >= 0; i--) {\n                var curPattern = patternConfig.patterns[i], curPatternTitle = curPattern.filename, curTemplate = ssgTemplates[curPatternTitle];\n                // Define base filter\n                curPattern.baseFilter = curPattern.filepath.split('/')[0];\n                if (curPattern !== null) {\n                    curPattern.sample = curTemplate !== undefined ? curTemplate(ssgData) : curTemplate;\n                    console.log('Current Tempalte:', curPatternTitle, curTemplate);\n                    var content = ssgCoreTemplates.patternItem(curPattern);\n                    try {\n                        // Parse Document and check if all elements are properly closed\n                        var domContent = parser.parseFromString(content, 'text/html');\n                        // Append parsed content\n                        allContent = domContent.body.innerHTML + allContent;\n                    }\n                    catch (exception) {\n                        console.log(exception);\n                    }\n                }\n            }\n            var allContentDOM = parser.parseFromString(allContent, 'text/html');\n            // alter templates and pages\n            var allTempLates = allContentDOM.querySelectorAll('div[data-cat=templates]'), allPages = allContentDOM.querySelectorAll('div[data-cat=pages]'), allOrganism = allContentDOM.querySelectorAll('div[data-cat=organism]');\n            Utils.changeItemToSinglePage(allTempLates);\n            Utils.changeItemToSinglePage(allPages);\n            Utils.changeItemToSinglePage(allOrganism);\n            container.insertAdjacentHTML('afterbegin', allContentDOM.body.innerHTML);\n            Prism.highlightAll();\n            RenderToc(patternConfig);\n            UI.ApplyUIState(ssg.UI.State.current());\n        };\n        UI.ApplyUIState = function (state) {\n            var applyFilter = function (state) {\n                if (state.filter !== undefined\n                    && state.filter !== 'single') {\n                    var buttons = doc.querySelectorAll(\".ssg-button[data-filter]\");\n                    // Set correct button\n                    for (var i = buttons.length - 1; i >= 0; i--) {\n                        var curButton = buttons[i];\n                        if (curButton.dataset !== null\n                            && curButton.dataset !== undefined\n                            && curButton.dataset['filter'] === state.filter) {\n                            if (!curButton.classList.contains('active')) {\n                                curButton.classList.add('active');\n                            }\n                        }\n                        else {\n                            if (curButton.classList.contains('active')) {\n                                curButton.classList.remove('active');\n                            }\n                        }\n                    }\n                    var query = \"div[class^='ssg-item'][data-cat='\" + state.filter + \"']\", invQuery = \"div[class^='ssg-item']:not([data-cat='\" + state.filter + \"'])\";\n                    if (state.filter === 'single') {\n                        var filter = state.filterSelector.substr(1);\n                        query = \"div[data-file='\" + filter + \"']\";\n                        invQuery = \"div:not([data-file='\" + filter + \"'])\";\n                        var tocButton = doc.querySelectorAll(\".ssg-button[data-action='ssg-toc']\");\n                        if (tocButton !== undefined && tocButton.length === 1) {\n                            tocButton[0].classList.add('active');\n                        }\n                    }\n                    if (state.filter === 'organism' ||\n                        state.filter === 'molecules' ||\n                        state.filter === 'templates') {\n                        ssg.UI.Filter.sliderSelection(state.filter);\n                    }\n                    // unselect all\n                    var notSelItems = doc.querySelectorAll(invQuery);\n                    for (var i = notSelItems.length - 1; i >= 0; i--) {\n                        notSelItems[i].classList.add('hide');\n                    }\n                    // make sure all are selected\n                    var selItems = doc.querySelectorAll(query);\n                    if (selItems.length === 1) {\n                        var curItem = selItems[0];\n                        if (curItem.dataset.cat !== undefined\n                            && curItem.dataset.cat !== null\n                            && (curItem.dataset.cat === 'templates'\n                                || curItem.dataset.cat === 'pages'\n                                || curItem.dataset.cat === 'organism')) {\n                            ssg.UI.Filter.sliderSelection(curItem.dataset.cat);\n                        }\n                        else {\n                            ssg.UI.Utils.hideSingleItemSlider(true);\n                        }\n                    }\n                    else {\n                        for (var i = selItems.length - 1; i >= 0; i--) {\n                            selItems[i].classList.remove('hide');\n                        }\n                    }\n                }\n                else if (state.filter === 'single') {\n                    var tocButton = doc.querySelector(coreUiElement.btnShowToC);\n                    tocButton.classList.add('active');\n                    if (state.filterSelector !== undefined &&\n                        state.filterSelector !== null) {\n                        var curFilter = state.filterSelector.substr(1);\n                        var allAMItems = [].slice.call(doc.querySelectorAll('div[class=ssg-item')), allOPTItems = [].slice.call(doc.querySelectorAll('div[class=ssg-item-single')), allItems = allAMItems.concat(allOPTItems);\n                        for (var i = allItems.length - 1; i >= 0; i--) {\n                            if (allItems[i].dataset['file'] !== curFilter) {\n                                var curItem = allItems[i];\n                                curItem.classList.add('hide');\n                            }\n                        }\n                    }\n                }\n            };\n            // apply the correct selected scren width tot the viewport\n            var applyScreenWidth = function (state) {\n                var viewPortQuery = \"button[data-viewport='\" + state.screen + \"']\", viewPortInvQuery = \"button.active[data-viewport]\", \n                // selecting buttons\n                viewPortActiveButton = doc.querySelector(viewPortInvQuery), viewPortButton = doc.querySelector(viewPortQuery), \n                // width selector\n                widthSelector = doc.getElementById('ssg-in-width'), contentWidth = doc.querySelector('.ssg-patterns-inner');\n                // If full screeen use actian width\n                if (state.screen === 'full') {\n                    state.screen = window.innerWidth;\n                }\n                // set inner screen width of patterns\n                contentWidth.style.width = state.screen + \"px\";\n                // view width selector\n                widthSelector.value = state.screen;\n                // activate viewport button\n                if (viewPortButton !== undefined\n                    && viewPortButton !== null) {\n                    viewPortButton.classList.add('active');\n                    if (viewPortButton !== viewPortActiveButton) {\n                        viewPortActiveButton.classList.remove('active');\n                    }\n                }\n            };\n            // applies extras such as shwo Source code\n            var applyExtras = function (state) {\n                // Set annotation button and enable annotations\n                if (state.xtras.indexOf('annotation') !== -1) {\n                    var notes = doc.querySelectorAll('.ssg-item-description');\n                    for (var i = notes.length - 1; i >= 0; i--) {\n                        var curNote = notes[i];\n                        curNote.classList.add('show');\n                    }\n                    var notesButton = doc.querySelectorAll(\"button[data-action='ssg-annot']\");\n                    for (var i = notesButton.length - 1; i >= 0; i--) {\n                        notesButton[i].classList.add('active');\n                    }\n                }\n                // Set code button and shows code\n                if (state.xtras.indexOf('code') !== -1) {\n                    var notes = doc.querySelectorAll('.ssg-item-code');\n                    for (var i = notes.length - 1; i >= 0; i--) {\n                        var curNote = notes[i];\n                        curNote.classList.add('show');\n                    }\n                    var notesButton = doc.querySelectorAll(\"button[data-action='ssg-code']\");\n                    for (var i = notesButton.length - 1; i >= 0; i--) {\n                        notesButton[i].classList.add('active');\n                    }\n                }\n            };\n            applyFilter(state);\n            applyScreenWidth(state);\n            applyExtras(state);\n        };\n        UI.EnableSingleSlider = function (currentSingleItems, filter) {\n            var slideItems = currentSingleItems;\n            var setCurrentItem = function (index) {\n                var curElement = slideItems[index];\n                currentTitle.textContent = curElement.title;\n                var allElements = doc.querySelectorAll('div[data-cat=\\'' + slideItems[currentSingleCount].category + '\\']');\n                for (var j = 0; j < allElements.length; j++) {\n                    var curPatternElement = allElements[j];\n                    if (curPatternElement.dataset['file'] === curElement.file) {\n                        curPatternElement.classList.remove('hide');\n                        var newState = ssg.UI.State.current();\n                        // newState.filter = \"single\";\n                        newState.filterSelector = '.' + curPatternElement.dataset['file'];\n                        ssg.UI.State.update(newState);\n                    }\n                    else {\n                        curPatternElement.classList.add('hide');\n                    }\n                }\n            };\n            var slidePatterns = function (event) {\n                event.preventDefault();\n                event.stopPropagation();\n                var currentButton = event.target;\n                if (currentButton !== null) {\n                    if (currentButton.dataset['filter'] === coreUiElement.singleNavLeft) {\n                        currentSingleCount -= 1;\n                    }\n                    ;\n                    if (currentButton.dataset['filter'] === coreUiElement.singleNavRight) {\n                        currentSingleCount += 1;\n                    }\n                    ;\n                    if (currentSingleCount > currentSingleItems.length - 1) {\n                        currentSingleCount = 0;\n                    }\n                    if (currentSingleCount < 0) {\n                        currentSingleCount = currentSingleItems.length - 1;\n                    }\n                }\n                setCurrentItem(currentSingleCount);\n            };\n            // check if only one pattern is in current selection\n            if (slideItems.length <= 1) {\n                return;\n            }\n            var currentTitle = doc.querySelector(coreUiElement.singleItemNavTitle);\n            currentTitle.textContent = slideItems[0].title;\n            // let slider = doc.querySelectorAll('.ssg-core-nav .ssg-button[data-filter=\\'' + filter + '\\']');\n            var slider = doc.querySelectorAll('.ssg-core-nav .ssg-button');\n            for (var i = 0; i < slider.length; i++) {\n                // remova all previous registered event handler\n                var currentButton = slider[i];\n                // clone current node without event handler\n                var newButton = currentButton.cloneNode(true);\n                // register new Click event\n                newButton.addEventListener('click', slidePatterns);\n                // replace element\n                currentButton.parentNode.replaceChild(newButton, currentButton);\n            }\n            var curState = ssg.UI.State.current();\n            // Check if TOC have been selected\n            if (curState.filterSelector !== undefined) {\n                // Setting current Item count i case filter using TOC\n                currentSingleCount = currentSingleItems.findIndex(function (x) { return x.file === curState.filterSelector.substring(1); });\n                // Update from current filter\n                setCurrentItem(currentSingleCount);\n            }\n        };\n        UI.ShowSliderCtrl = function (show) {\n            var singleSliderControl = document.querySelector('.' + coreUiElement.singleItemNav);\n            if (show) {\n                singleSliderControl.classList.remove('hidden');\n            }\n            else {\n                singleSliderControl.classList.add('hidden');\n            }\n        };\n        UI.InitEvents = function () {\n            // Render Events\n            var filterButtons = doc.querySelectorAll(coreUiElement.filterButton), viewButtons = doc.querySelectorAll(coreUiElement.viewButton), viewPortButtons = doc.querySelectorAll(coreUiElement.viewPortButton), viewPortWidth = doc.querySelectorAll(coreUiElement.viewPortWidth), \n            // Action Buttons\n            showCode = doc.querySelectorAll(coreUiElement.btnShowCode), showAnnot = doc.querySelectorAll(coreUiElement.btnShowAnnotion), showToc = doc.querySelectorAll(coreUiElement.btnShowToC), \n            // TOC Eevent\n            allTocItems = doc.querySelectorAll(coreUiElement.tocSearchBox);\n            UI.Events.registerEvents(filterButtons, 'click', UI.Events.changeFilter);\n            UI.Events.registerEvents(viewButtons, 'click', UI.Events.changeView); // mabye obsolete?\n            UI.Events.registerEvents(viewPortButtons, 'click', UI.Events.changeViewPort);\n            UI.Events.registerEvents(viewPortWidth, 'blur', UI.Events.viewPortResizer);\n            UI.Events.registerEvents(viewPortWidth, 'focusout', UI.Events.viewPortResizer);\n            UI.Events.registerEvents(viewPortWidth, 'keypress', UI.Events.viewPortResizer);\n            UI.Events.registerEvents(showCode, 'click', UI.Events.showSource);\n            UI.Events.registerEvents(showAnnot, 'click', UI.Events.showAnnotation);\n            // show and hide table fo contents\n            UI.Events.registerEvents(showToc, 'click', UI.Events.showToc);\n            // Search table of contents\n            UI.Events.registerEvents(allTocItems, 'keyup', UI.Events.searchToc);\n        };\n        UI.Init = function () {\n            Promise.all([ssg.UI.Utils.requestData('GET', '/_config/pattern.conf.json')])\n                .then(function (result) {\n                try {\n                    patternConfig = JSON.parse(result.toString());\n                }\n                catch (error) {\n                    console.log(error);\n                }\n            })\n                .then(function () {\n                UI.Render();\n                UI.InitEvents();\n                UI.ApplyUIState(ssg.UI.State.current());\n                if (UI.PostRender.length !== 0) {\n                    UI.PostRender.forEach(function (element) {\n                        element();\n                    });\n                }\n            })\n                .catch(function (error) {\n                console.log(error);\n            });\n        };\n        UI.PostRender = [];\n    })(UI = ssg_1.UI || (ssg_1.UI = {}));\n})(ssg || (ssg = {}));\n;\nssg.UI.Init();\n"],"file":"ssg-min.js"}